name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Debug Variables
        env:
          TEST_CLIENT_ID: ${{ vars.FALCON_CLIENT_ID }}
          TEST_CLIENT_SECRET: ${{ secrets.FALCON_CLIENT_SECRET }}
        run: |
          echo "Debugging environment variables"
          if [ -n "$TEST_CLIENT_ID" ]; then
            echo "FALCON_CLIENT_ID is set"
          else
            echo "FALCON_CLIENT_ID is NOT set"
          fi
          if [ -n "$TEST_CLIENT_SECRET" ]; then
            echo "FALCON_CLIENT_SECRET is set"
          else
            echo "FALCON_CLIENT_SECRET is NOT set"
          fi

      - name: Run FCS IaC Scan
        uses: crowdstrike/fcs-action@v2.0.0
        env:
          INPUT_FALCON_CLIENT_ID: ${{ vars.FALCON_CLIENT_ID }}
          FALCON_CLIENT_SECRET: ${{ secrets.FALCON_CLIENT_SECRET }}
        with:
          falcon_client_id: ${{ vars.FALCON_CLIENT_ID }}
          falcon_region: 'us-1'
          path: './'

      # Login to Azure
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Login to ACR
      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: crmiked.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Download and prepare Falcon Container Sensor
      - name: Download and Process Falcon Container Sensor
        env:
          FCSCLIENTID: ${{ vars.FALCON_CLIENT_ID }}
          FSCSECRET: ${{ secrets.FALCON_CLIENT_SECRET }}
        run: |
          # Download the pull script
          curl -sSL -o falcon-container-sensor-pull.sh https://github.com/CrowdStrike/falcon-scripts/releases/latest/download/falcon-container-sensor-pull.sh
          chmod 777 ./falcon-container-sensor-pull.sh

          # Get the latest sensor tag and pull token
          export SENSOR=$(bash ./falcon-container-sensor-pull.sh -u $FCSCLIENTID -s $FSCSECRET --type falcon-sensor --list-tags)
          export LATEST_SENSOR_TAG=$(echo "$SENSOR" | jq -r '.tags | sort | last')
          export PULLTOKEN=$(bash ./falcon-container-sensor-pull.sh -u $FCSCLIENTID -s $FSCSECRET --type falcon-sensor --get-pull-token)

          # Copy to ACR
          ./falcon-container-sensor-pull.sh \
          --client-id $FCSCLIENTID \
          --client-secret $FSCSECRET \
          --region us-1 \
          --type falcon-sensor \
          --copy crmiked.azurecr.io/falcon-sensor:$LATEST_SENSOR_TAG

          # Tag as latest as well
          docker tag crmiked.azurecr.io/falcon-sensor:$LATEST_SENSOR_TAG crmiked.azurecr.io/falcon-sensor:latest
          docker push crmiked.azurecr.io/falcon-sensor:latest
